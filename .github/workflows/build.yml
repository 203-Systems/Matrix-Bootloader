name: Build

on:
  push:
  pull_request:
    branches: [ master ]
  repository_dispatch:
  release:
    types:
      - created

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      json: ${{ steps.set-matrix-json.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Generate matrix json
        id: set-matrix-json
        run: |
          MATRIX_JSON=$(python .github/workflows/ci_set_matrix.py)
          echo "matrix=$MATRIX_JSON"
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  # ---------------------------------------
  # Build ARM
  # ---------------------------------------
  arm:
    needs: set-matrix
    if: false
    uses: ./.github/workflows/build_util.yml
    strategy:
      fail-fast: false
      matrix:
        port:
        # Alphabetical order
        #- 'kinetis_k32l2' skip since self-update is not implemented
        - 'lpc55'
        - 'mimxrt10xx'
        - 'stm32f3'
        - 'stm32f4'
        - 'stm32l4'
    with:
      port: ${{ matrix.port }}
      boards: ${{ toJSON(fromJSON(needs.set-matrix.outputs.json)[matrix.port].board) }}
      build-system: 'make'
      toolchain: 'arm-gcc'

  # ---------------------------------------
  # Build ESP
  # ---------------------------------------
  esp:
    needs: set-matrix
    uses: ./.github/workflows/build_util.yml
    with:
      port: 'espressif'
      boards: ${{ toJSON(fromJSON(needs.set-matrix.outputs.json)['espressif'].board) }}
      build-system: 'make'
      toolchain: 'esp-idf'
      toolchain_url: 'v5.1.1'


#    - name: Find Port
#      run: |
#        ENV_PORT=`echo ports/*/boards/${{ matrix.board }}`
#        ENV_PORT=`dirname $ENV_PORT`
#        ENV_PORT=`dirname $ENV_PORT`
#        echo ENV_PORT=$ENV_PORT >> $GITHUB_ENV
#        echo BIN_PATH=$ENV_PORT/_bin/${{ matrix.board }} >> $GITHUB_ENV

#    - name: Build
#      run: |
#        make -C $ENV_PORT BOARD=${{ matrix.board }} all self-update copy-artifact
#        for app in ${{ env.ENV_PORT }}/apps/*/; do if [ $app != 'apps/self_update/' ]; then make -C $app BOARD=${{ matrix.board }} all; fi done
#
#    - uses: actions/upload-artifact@v4
#      with:
#        name: ${{ matrix.board }}
#        path: ${{ env.BIN_PATH }}
#
#    - name: Prepare Release Asset
#      if: ${{ github.event_name == 'release' }}
#      run: |
#        for f in ${{ env.BIN_PATH }}/*; do mv $f ${f%.*}-${{ github.event.release.tag_name }}."${f#*.}"; done
#        zip -jr tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip ${{ env.BIN_PATH }}
#
#    - name: Upload Release Asset
#      uses: softprops/action-gh-release@v1
#      if: ${{ github.event_name == 'release' }}
#      with:
#        files: |
#          tinyuf2-${{ matrix.board }}-*.zip
#          ${{ env.BIN_PATH }}/update-tinyuf2-${{ matrix.board }}-*.uf2
